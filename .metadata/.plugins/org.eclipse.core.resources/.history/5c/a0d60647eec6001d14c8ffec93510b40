package sit.wire;

import java.awt.AWTException;

// Characters 변수 

// Operations 기능

// 
// precondition:
// postcondition:
// return:

import java.io.IOException;
import java.net.ConnectException;
import java.net.UnknownHostException;

import data.LogData;
import file.LogFile;
import file.WireID;
import firebase.FirebaseUpload;
import firebase.FirebaseUploadForm;
import screenShots.ScreenDetection;
import timeFunctions.CurrentTime;
import timeFunctions.TimeSleep;


public class Main {
	

    public static void main(String[] args) throws IOException, AWTException {
    	
    	while (true) {
    		CurrentTime.setTime(); // 현재 시간 설정
    		String[] addedLines = LogFile.addedLines();  // 추가된 로그
    		   		
    		if (addedLines != null) {
    			for (String line : addedLines) {  // 추가된 로그 탐색
    				for (String logKey : LogData.getLogKeyList()) {  // 추가된 로그에 특정 key포함되어있는지 확인
    					if(line.contains(logKey)) {
    						FirebaseUpload.logUpload(logKey);
	    				}
    				}
    			}
    		}
    		
    		if (ScreenDetection.Restart()) {
    			firebase("가공감지");
    		}
    		
        	TimeSleep.sleep(1);  // 시간 지연
    	}
    }

	private static void firebase(String logKey) {
		
		String path = null;
		String pathLog = null;
		
		if (WireID.getWireID().contains("km")) {
			path = "company/km/";
		} else if (WireID.getWireID().contains("sit")) {
			path = "company/sit/";
		}
		
		pathLog = path + WireID.getWireID() + "/Logs/" + CurrentTime.getTime("date") + "/" + CurrentTime.getTime("time");
		
		
		try {
			FirebaseUploadForm.uploadForm(pathLog, "log", LogData.getLogMap().get(logKey)[0], 
					"time", CurrentTime.getTime("time"));
			
			FirebaseUploadForm.uploadForm(path + WireID.getWireID() + "/Logs", "date", CurrentTime.getTime("date"));
			System.out.println(CurrentTime.getTime("date") + " " + CurrentTime.getTime("time") + " " + LogData.getLogMap().get(logKey)[1]);
			
		} catch (UnknownHostException uke) {
			System.out.println(CurrentTime.getTime("date") + " " + CurrentTime.getTime("time") + " " + "인터넷 연결이 불안정합니다.");
			
		} catch (ConnectException ce) {
			System.out.println(CurrentTime.getTime("date") + " " + CurrentTime.getTime("time") + " " + ce.getMessage());
		} catch (Exception e) { e.printStackTrace(); }
		
	}
    
    
}